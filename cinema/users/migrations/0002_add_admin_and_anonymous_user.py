# Generated by Django 2.2.3 on 2019-08-01 19:55

# pylint: disable=missing-docstring
# pylint: disable=invalid-name
# pylint: disable=trailing-whitespace
# pylint: disable=unused-argument
from django.contrib.auth import get_user_model
from django.contrib.auth.models import Permission
from django.db import migrations

# Enable autoinject function
from cinema.users.models import User


def create_admin_user_and_roles(apps, schema_editor):
    """
    Create initial admin user
    :param apps:
    :param schema_editor:
    :return: None
    """

    # Create admin
    permissions = Permission.objects.all()
    user_data = {
        'is_superuser': True,
        'is_staff': True,
        'is_active': True,
        'username': 'admin',
        'name': 'MediaBenito',
        'email': 'cinema@cinema.com',
        'password': 'adminadmin123',
    }

    user = User()
    user.fill(user_data)
    user = get_user_model().objects.create_user(**user_data)
    user.user_permissions.set(permissions)
    user.save()

    # Create admin
    user_anonymous = {
        'is_superuser': False,
        'is_staff': False,
        'is_active': False,
        'username': 'anonymous',
        'name': 'Anonymous',
        'email': 'anonymous@pada.com',
        'password': 'anonymous',
    }

    user = User()
    user.fill(user_anonymous)
    user = get_user_model().objects.create_user(**user_anonymous)
    user.save()


class Migration(migrations.Migration):
    dependencies = [
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(create_admin_user_and_roles),
    ]
